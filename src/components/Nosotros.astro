<article class="nosotrosIndex" id="nosotrosIndex">
    <div class="container">
        <div class="row">
            <h2 class="text-center animado animacionS">Nosotros</h2>
            <div class="contenedorNosotros col-12 col-lg-11">
                <section class="col-12 col-sm-10 col-md-6 animado animacionS">
                    <p class="text-justify">
                        Studio Models es un lugar único, donde la experiencia, la calidad y la comodidad son prioridades. Somos un estudio que se encarga de brindarle a sus modelos webcams todo lo que necesitan para lograr su éxito. Es un lugar donde la experiencia, la calidad y la comodidad son prioridades.
                    </p>
                </section>
                <section class="contenedorSlider col-12 col-sm-10 col-md-6 animado animacionS" id="contenedorSlider">
                    <div class="sliderNosotrosIndex" id="sliderNosotrosIndex" style="position: relative; width: 100%; background-image: url(/images/nosotros/nosotros.jpg); background-size: cover; background-position: center;">
                        <div class="slide1"></div>
                        <div class="slide2"></div>
                        <div class="slide3"></div>
                        <div class="slide4"></div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</article>

<script>
// Type assertion for the slider element
const slider = document.getElementById("sliderNosotrosIndex") as HTMLElement | null;

// Function to adjust layout based on container width
function ajustarLayout(target: HTMLElement) {
    if (!target) return;
    
    const ancho = target.offsetWidth;
    target.style.height = `${ancho}px`;
    
    // Type the NodeList as an array of HTMLElements
    const slides = Array.from(target.querySelectorAll('[class^="slide"]')) as HTMLElement[];
    const altoDeSlide = ancho / 4;

    slides.forEach((slide: HTMLElement, index: number) => {
        slide.style.height = `${altoDeSlide}px`;
        slide.style.top = `${index * altoDeSlide}px`;
    });
}

if (slider) {
    const imagenes = ["nosotros.jpg", "nosotros2.jpg"];
    let indiceActual = 0;

    function cambiarImagen() {
        if (!slider) return;
        indiceActual = (indiceActual + 1) % imagenes.length;
        slider.style.backgroundImage = `url(/images/nosotros/${imagenes[indiceActual]})`;
    }

    function animarSlider() {
        if (!slider) return;
        slider.classList.add("outNosotros");
        
        setTimeout(() => {
            cambiarImagen();
            if (slider) {
                slider.classList.remove("outNosotros");
            }
        }, 900);
    }

    // Type the ResizeObserver callback
    const observer = new ResizeObserver((entries) => {
        entries.forEach(entry => {
            if (entry.target instanceof HTMLElement) {
                ajustarLayout(entry.target);
            }
        });
    });

    // Start observing the slider
    observer.observe(slider);

    // Set up the animation interval
    const intervalId = setInterval(animarSlider, 4000);

    // Clean up the interval and observer when the component is destroyed
    document.addEventListener('astro:before-unmount', () => {
        clearInterval(intervalId);
        observer.disconnect();
    });
}
</script>
